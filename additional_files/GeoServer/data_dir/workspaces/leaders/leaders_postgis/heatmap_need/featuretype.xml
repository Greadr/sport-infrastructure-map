<featureType>
  <id>FeatureTypeInfoImpl--3bff0868:17ce246cc46:404f</id>
  <name>heatmap_need</name>
  <nativeName>heatmap_need</nativeName>
  <namespace>
    <id>NamespaceInfoImpl-24d5dd94:17c74592a0a:-7ffe</id>
  </namespace>
  <title>heatmap_need</title>
  <keywords>
    <string>features</string>
    <string>heatmap_need</string>
  </keywords>
  <nativeCRS>GEOGCS[&quot;WGS 84&quot;, &#xd;
  DATUM[&quot;World Geodetic System 1984&quot;, &#xd;
    SPHEROID[&quot;WGS 84&quot;, 6378137.0, 298.257223563, AUTHORITY[&quot;EPSG&quot;,&quot;7030&quot;]], &#xd;
    AUTHORITY[&quot;EPSG&quot;,&quot;6326&quot;]], &#xd;
  PRIMEM[&quot;Greenwich&quot;, 0.0, AUTHORITY[&quot;EPSG&quot;,&quot;8901&quot;]], &#xd;
  UNIT[&quot;degree&quot;, 0.017453292519943295], &#xd;
  AXIS[&quot;Geodetic longitude&quot;, EAST], &#xd;
  AXIS[&quot;Geodetic latitude&quot;, NORTH], &#xd;
  AUTHORITY[&quot;EPSG&quot;,&quot;4326&quot;]]</nativeCRS>
  <srs>EPSG:4326</srs>
  <nativeBoundingBox>
    <minx>36.804627</minx>
    <maxx>37.95204</maxx>
    <miny>55.157697</miny>
    <maxy>56.012284</maxy>
    <crs>EPSG:4326</crs>
  </nativeBoundingBox>
  <latLonBoundingBox>
    <minx>36.804627</minx>
    <maxx>37.95204</maxx>
    <miny>55.157697</miny>
    <maxy>56.012284</maxy>
    <crs>EPSG:4326</crs>
  </latLonBoundingBox>
  <projectionPolicy>FORCE_DECLARED</projectionPolicy>
  <enabled>true</enabled>
  <metadata>
    <entry key="JDBC_VIRTUAL_TABLE">
      <virtualTable>
        <name>heatmap_need</name>
        <sql>with zones as (&#xd;
	select distinct on (sz.id) sz.id, sz.square &#xd;
	from  &quot;source&quot;.sport_zones sz&#xd;
	left join &quot;source&quot;.sport_objects so on so.id = sz.object_id &#xd;
	left join &quot;source&quot;.sport_zones_to_kinds szk on sz.id = szk.sport_zone_id &#xd;
	where (&#xd;
			NULLIF(&apos;%obj_name%&apos;, &apos;&apos;) is null or&#xd;
			so.name = any(string_to_array(&apos;%obj_name%&apos;, &apos;;&apos;))&#xd;
		)&#xd;
		and&#xd;
		(&#xd;
			NULLIF(&apos;%org_id%&apos;, &apos;&apos;) is null or&#xd;
			so.org_id = any(string_to_array(&apos;%org_id%&apos;, &apos;;&apos;)::int[])&#xd;
		)&#xd;
		and&#xd;
		(&#xd;
			NULLIF(&apos;%sz_name%&apos;, &apos;&apos;) is null or&#xd;
			sz.name = any(string_to_array(&apos;%sz_name%&apos;, &apos;;&apos;))&#xd;
		)	&#xd;
		and&#xd;
		(&#xd;
			NULLIF(&apos;%sz_type%&apos;, &apos;&apos;) is null or&#xd;
			sz.zone_type = any(string_to_array(&apos;%sz_type%&apos;, &apos;;&apos;)::int[])&#xd;
		)	&#xd;
		and&#xd;
		(&#xd;
			NULLIF(&apos;%buf%&apos;, &apos;&apos;) is null or&#xd;
			so.buffer = any(string_to_array(&apos;%buf%&apos;, &apos;;&apos;)::int[])&#xd;
		)&#xd;
		and&#xd;
		(&#xd;
			NULLIF(&apos;%s_kind%&apos;, &apos;&apos;) is null or&#xd;
			szk.sport_kind_id = any(string_to_array(&apos;%s_kind%&apos;, &apos;;&apos;)::int[])&#xd;
		)&#xd;
)&#xd;
, unom_sum as (&#xd;
	select unnest(h.unoms) unom, sum(square) square&#xd;
	from zones z, geo.zones_arrays_unoms h &#xd;
	where z.id=h.id&#xd;
	group by unom&#xd;
)&#xd;
, stat_aggr as (&#xd;
	select l.unom, round(s.square/popul*100000, 0) square_provision from unom_sum s&#xd;
	right join geo.living_unoms l using (unom)&#xd;
)&#xd;
, stats_to_hex as (&#xd;
	select unnest(h.hex_ids) hex_id, s.square_provision&#xd;
	from stat_aggr s, geo.unoms_arrays_hexagons h&#xd;
	where s.unom=h.unom&#xd;
)&#xd;
, hex_group as (&#xd;
	select s.hex_id, avg(square_provision) square_provision&#xd;
	from stats_to_hex s	&#xd;
	group by s.hex_id&#xd;
)&#xd;
, heat as (&#xd;
	select h.hex_id, g.geom, h.square_provision from hex_group h, geo.grid_hex_wgs g&#xd;
	where g.id = h.hex_id&#xd;
)&#xd;
, prov_population as (&#xd;
	select h.*, population&#xd;
	from heat h&#xd;
	join geo.grid_hex_wgs_population g&#xd;
	on h.hex_id = g.id&#xd;
)&#xd;
, percentiles_prov as (&#xd;
	SELECT PERCENTILE_CONT(0.5) WITHIN GROUP(ORDER BY square_provision) prov_perc_50, &#xd;
		PERCENTILE_CONT(0.25) WITHIN GROUP(ORDER BY square_provision) prov_perc_25&#xd;
	FROM heat&#xd;
--	where square_provision is not null&#xd;
)&#xd;
, percentiles_pop as (&#xd;
	SELECT PERCENTILE_CONT(0.9) WITHIN GROUP(ORDER BY population) pop_perc_90, &#xd;
		PERCENTILE_CONT(0.45) WITHIN GROUP(ORDER BY population) pop_perc_45&#xd;
	FROM prov_population&#xd;
--	where square_provision is null&#xd;
)&#xd;
select hex_id, geom,&#xd;
	case &#xd;
		when square_provision &gt; prov_perc_50 then 1&#xd;
		when square_provision &gt; prov_perc_25 and square_provision &lt;= prov_perc_50 then 2&#xd;
		when square_provision &gt; 0 and square_provision &lt;= prov_perc_25 then 3&#xd;
		when square_provision is null and population &lt;= pop_perc_45 then 4&#xd;
		when square_provision is null and population &gt; pop_perc_45 and population &lt;= pop_perc_90 then 5&#xd;
		when square_provision is null and population &gt; pop_perc_90 then 6&#xd;
	end index_class&#xd;
from prov_population p_pop, percentiles_prov, percentiles_pop
</sql>
        <escapeSql>false</escapeSql>
        <geometry>
          <name>geom</name>
          <type>Polygon</type>
          <srid>4326</srid>
        </geometry>
        <parameter>
          <name>buf</name>
          <regexpValidator>^[-а-яА-ЯёЁ\s\d;№,«».]+$</regexpValidator>
        </parameter>
        <parameter>
          <name>obj_name</name>
          <regexpValidator>^[-а-яА-ЯёЁ\s\d;№,«».]+$</regexpValidator>
        </parameter>
        <parameter>
          <name>org_id</name>
          <regexpValidator>^[-а-яА-ЯёЁ\s\d;№,«».]+$</regexpValidator>
        </parameter>
        <parameter>
          <name>sz_name</name>
          <regexpValidator>^[-а-яА-ЯёЁ\s\d;№,«».]+$</regexpValidator>
        </parameter>
        <parameter>
          <name>s_kind</name>
          <regexpValidator>^[-а-яА-ЯёЁ\s\d;№,«».]+$</regexpValidator>
        </parameter>
        <parameter>
          <name>sz_type</name>
          <regexpValidator>^[-а-яА-ЯёЁ\s\d;№,«».]+$</regexpValidator>
        </parameter>
      </virtualTable>
    </entry>
  </metadata>
  <store class="dataStore">
    <id>DataStoreInfoImpl-24d5dd94:17c74592a0a:-7ffd</id>
  </store>
  <serviceConfiguration>false</serviceConfiguration>
  <maxFeatures>0</maxFeatures>
  <numDecimals>0</numDecimals>
  <padWithZeros>false</padWithZeros>
  <forcedDecimal>false</forcedDecimal>
  <overridingServiceSRS>false</overridingServiceSRS>
  <skipNumberMatched>false</skipNumberMatched>
  <circularArcPresent>false</circularArcPresent>
</featureType>